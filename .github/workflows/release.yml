name: Make release for all platforms
on:
  push:
    branches:
      - master
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:
jobs:
  release:
    name: Create Github Release
    if: contains(github.ref, 'tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build:
    if: contains(github.ref, 'tags/v')
    needs: [release]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest]
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: release_url
      - uses: actions/setup-go@v2
        with:
          go-version: 1.14
      - name: install esc
        run: |
          go get -u github.com/mjibson/esc
      - name: install Ubuntu deps
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get -y install libgtk-3-dev libappindicator3-dev libwebkit2gtk-4.0-dev
      - uses: actions/checkout@v2
      - name: Build win & ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          make release-linux
          make release-windows
      - name: Build mac
        if: matrix.os == 'macOS-latest'
        run: |
          make release-darwin

      - name: Get Release File Name & Upload URL
        id: get_release_info
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
        env:
          TAG_REF_NAME: ${{ github.ref }}
          REPOSITORY_NAME: ${{ github.repository }}

      - name: Upload Linux
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: build/lyricfier-linux-amd64
          asset_name: lyricfier-linux-amd64
          asset_content_type: application/x-executable

      - name: Upload Windows
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: build/lyricfier-windows-amd64.exe
          asset_name: lyricfier-windows-amd64.exe
          asset_content_type: application/x-dosexec

      - name: Upload Mac
        if: matrix.os == 'macOS-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: build/lyricfier-darwin-amd64
          asset_name: lyricfier-darwin-amd64
          asset_content_type: application/x-executable
